From c00ba8213d3ab9cee5a7d86f4cdd832a0f85cd95 Mon Sep 17 00:00:00 2001
From: Christopher Larson <chris_larson@mentor.com>
Date: Wed, 26 Jul 2017 17:16:53 -0600
Subject: [PATCH] alternatives.c: obey sysroot for facility in removeLinks

Signed-off-by: Christopher Larson <chris_larson@mentor.com>
---
 alternatives.c | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/alternatives.c b/alternatives.c
index 3a012d0..a6ac605 100644
--- a/alternatives.c
+++ b/alternatives.c
@@ -372,6 +372,10 @@ static int isLink(char *path)  {
 
 static int removeLinks(struct linkSet * l, struct appConfig * config) {
     char * sl;
+    char * facility = l->facility;
+
+    if (config->sysroot)
+	asprintf(&facility, "%s%s", config->sysroot, l->facility);
 
     sl = alloca(strlen(config->altDir) + strlen(l->title) + 2);
     sprintf(sl, "%s/%s", config->altDir, l->title);
@@ -383,10 +387,10 @@ static int removeLinks(struct linkSet * l, struct appConfig * config) {
 	return 1;
     }
     if (FL_TEST(config->flags)) {
-	printf(_("would remove %s\n"), l->facility);
-    } else if (isLink(l->facility) && unlink(l->facility) && errno != ENOENT) {
+	printf(_("would remove %s\n"), facility);
+    } else if (isLink(facility) && unlink(facility) && errno != ENOENT) {
 	fprintf(stderr, _("failed to remove link %s: %s\n"),
-		l->facility, strerror(errno));
+		facility, strerror(errno));
 	return 1;
     }
 
-- 
2.7.4

