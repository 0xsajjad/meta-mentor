From 544788f2ef9cd674454d38f72c1c93d844b727a1 Mon Sep 17 00:00:00 2001
From: Andrew Gabbasov <andrew_gabbasov@mentor.com>
Date: Fri, 7 Dec 2012 09:10:07 -0600
Subject: [PATCH] Update ARM syscalls instrumentation to version 3.5.6

Signed-off-by: Andrew Gabbasov <andrew_gabbasov@mentor.com>
---
 .../arm-32-syscalls-3.5.6}                         |  54 +++---
 ...integers.h => arm-32-syscalls-3.5.6_integers.h} |  32 +++-
 .../arm-32-syscalls-3.5.6_integers_override.h      |  70 +++++++
 ...pointers.h => arm-32-syscalls-3.5.6_pointers.h} | 208 +++++++++++++++------
 ...h => arm-32-syscalls-3.5.6_pointers_override.h} |   0
 .../syscalls/headers/syscalls_integers.h           |   2 +-
 .../syscalls/headers/syscalls_pointers.h           |   2 +-
 7 files changed, 284 insertions(+), 84 deletions(-)
 rename instrumentation/syscalls/{2.6.38/arm-32-syscalls-2.6.38 => 3.5.6/arm-32-syscalls-3.5.6} (90%)
 rename instrumentation/syscalls/headers/{arm-32-syscalls-2.6.38_integers.h => arm-32-syscalls-3.5.6_integers.h} (97%)
 create mode 100644 instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers_override.h
 rename instrumentation/syscalls/headers/{arm-32-syscalls-2.6.38_pointers.h => arm-32-syscalls-3.5.6_pointers.h} (91%)
 rename instrumentation/syscalls/headers/{arm-32-syscalls-2.6.38_pointers_override.h => arm-32-syscalls-3.5.6_pointers_override.h} (100%)

diff --git a/instrumentation/syscalls/2.6.38/arm-32-syscalls-2.6.38 b/instrumentation/syscalls/3.5.6/arm-32-syscalls-3.5.6
similarity index 90%
rename from instrumentation/syscalls/2.6.38/arm-32-syscalls-2.6.38
rename to instrumentation/syscalls/3.5.6/arm-32-syscalls-3.5.6
index 89194e2..0f02e0f 100644
--- a/instrumentation/syscalls/2.6.38/arm-32-syscalls-2.6.38
+++ b/instrumentation/syscalls/3.5.6/arm-32-syscalls-3.5.6
@@ -2,14 +2,14 @@ syscall sys_restart_syscall nr 0 nbargs 0 types: () args: ()
 syscall sys_exit nr 1 nbargs 1 types: (int) args: (error_code)
 syscall sys_read nr 3 nbargs 3 types: (unsigned int, char *, size_t) args: (fd, buf, count)
 syscall sys_write nr 4 nbargs 3 types: (unsigned int, const char *, size_t) args: (fd, buf, count)
-syscall sys_open nr 5 nbargs 3 types: (const char *, int, int) args: (filename, flags, mode)
+syscall sys_open nr 5 nbargs 3 types: (const char *, int, umode_t) args: (filename, flags, mode)
 syscall sys_close nr 6 nbargs 1 types: (unsigned int) args: (fd)
-syscall sys_creat nr 8 nbargs 2 types: (const char *, int) args: (pathname, mode)
+syscall sys_creat nr 8 nbargs 2 types: (const char *, umode_t) args: (pathname, mode)
 syscall sys_link nr 9 nbargs 2 types: (const char *, const char *) args: (oldname, newname)
 syscall sys_unlink nr 10 nbargs 1 types: (const char *) args: (pathname)
 syscall sys_chdir nr 12 nbargs 1 types: (const char *) args: (filename)
-syscall sys_mknod nr 14 nbargs 3 types: (const char *, int, unsigned) args: (filename, mode, dev)
-syscall sys_chmod nr 15 nbargs 2 types: (const char *, mode_t) args: (filename, mode)
+syscall sys_mknod nr 14 nbargs 3 types: (const char *, umode_t, unsigned) args: (filename, mode, dev)
+syscall sys_chmod nr 15 nbargs 2 types: (const char *, umode_t) args: (filename, mode)
 syscall sys_lchown16 nr 16 nbargs 3 types: (const char *, old_uid_t, old_gid_t) args: (filename, user, group)
 syscall sys_lseek nr 19 nbargs 3 types: (unsigned int, off_t, unsigned int) args: (fd, offset, origin)
 syscall sys_getpid nr 20 nbargs 0 types: () args: ()
@@ -23,7 +23,7 @@ syscall sys_nice nr 34 nbargs 1 types: (int) args: (increment)
 syscall sys_sync nr 36 nbargs 0 types: () args: ()
 syscall sys_kill nr 37 nbargs 2 types: (pid_t, int) args: (pid, sig)
 syscall sys_rename nr 38 nbargs 2 types: (const char *, const char *) args: (oldname, newname)
-syscall sys_mkdir nr 39 nbargs 2 types: (const char *, int) args: (pathname, mode)
+syscall sys_mkdir nr 39 nbargs 2 types: (const char *, umode_t) args: (pathname, mode)
 syscall sys_rmdir nr 40 nbargs 1 types: (const char *) args: (pathname)
 syscall sys_dup nr 41 nbargs 1 types: (unsigned int) args: (fildes)
 syscall sys_pipe nr 42 nbargs 1 types: (int *) args: (fildes)
@@ -57,11 +57,12 @@ syscall sys_setgroups16 nr 81 nbargs 2 types: (int, old_gid_t *) args: (gidsetsi
 syscall sys_symlink nr 83 nbargs 2 types: (const char *, const char *) args: (oldname, newname)
 syscall sys_readlink nr 85 nbargs 3 types: (const char *, char *, int) args: (path, buf, bufsiz)
 syscall sys_uselib nr 86 nbargs 1 types: (const char *) args: (library)
+syscall sys_swapon nr 87 nbargs 2 types: (const char *, int) args: (specialfile, swap_flags)
 syscall sys_reboot nr 88 nbargs 4 types: (int, int, unsigned int, void *) args: (magic1, magic2, cmd, arg)
 syscall sys_munmap nr 91 nbargs 2 types: (unsigned long, size_t) args: (addr, len)
 syscall sys_truncate nr 92 nbargs 2 types: (const char *, long) args: (path, length)
 syscall sys_ftruncate nr 93 nbargs 2 types: (unsigned int, unsigned long) args: (fd, length)
-syscall sys_fchmod nr 94 nbargs 2 types: (unsigned int, mode_t) args: (fd, mode)
+syscall sys_fchmod nr 94 nbargs 2 types: (unsigned int, umode_t) args: (fd, mode)
 syscall sys_fchown16 nr 95 nbargs 3 types: (unsigned int, old_uid_t, old_gid_t) args: (fd, user, group)
 syscall sys_getpriority nr 96 nbargs 2 types: (int, int) args: (which, who)
 syscall sys_setpriority nr 97 nbargs 3 types: (int, int, int) args: (which, who, niceval)
@@ -75,15 +76,17 @@ syscall sys_newlstat nr 107 nbargs 2 types: (const char *, struct stat *) args:
 syscall sys_newfstat nr 108 nbargs 2 types: (unsigned int, struct stat *) args: (fd, statbuf)
 syscall sys_vhangup nr 111 nbargs 0 types: () args: ()
 syscall sys_wait4 nr 114 nbargs 4 types: (pid_t, int *, int, struct rusage *) args: (upid, stat_addr, options, ru)
+syscall sys_swapoff nr 115 nbargs 1 types: (const char *) args: (specialfile)
 syscall sys_sysinfo nr 116 nbargs 1 types: (struct sysinfo *) args: (info)
 syscall sys_fsync nr 118 nbargs 1 types: (unsigned int) args: (fd)
 syscall sys_setdomainname nr 121 nbargs 2 types: (char *, int) args: (name, len)
 syscall sys_newuname nr 122 nbargs 1 types: (struct new_utsname *) args: (name)
 syscall sys_adjtimex nr 124 nbargs 1 types: (struct timex *) args: (txc_p)
 syscall sys_mprotect nr 125 nbargs 3 types: (unsigned long, size_t, unsigned long) args: (start, len, prot)
-syscall sys_sigprocmask nr 126 nbargs 3 types: (int, old_sigset_t *, old_sigset_t *) args: (how, set, oset)
+syscall sys_sigprocmask nr 126 nbargs 3 types: (int, old_sigset_t *, old_sigset_t *) args: (how, nset, oset)
 syscall sys_init_module nr 128 nbargs 3 types: (void *, unsigned long, const char *) args: (umod, len, uargs)
 syscall sys_delete_module nr 129 nbargs 2 types: (const char *, unsigned int) args: (name_user, flags)
+syscall sys_quotactl nr 131 nbargs 4 types: (unsigned int, const char *, qid_t, void *) args: (cmd, special, id, addr)
 syscall sys_getpgid nr 132 nbargs 1 types: (pid_t) args: (pid)
 syscall sys_fchdir nr 133 nbargs 1 types: (unsigned int) args: (fd)
 syscall sys_bdflush nr 134 nbargs 2 types: (int, long) args: (func, data)
@@ -116,13 +119,13 @@ syscall sys_sched_rr_get_interval nr 161 nbargs 2 types: (pid_t, struct timespec
 syscall sys_nanosleep nr 162 nbargs 2 types: (struct timespec *, struct timespec *) args: (rqtp, rmtp)
 syscall sys_mremap nr 163 nbargs 5 types: (unsigned long, unsigned long, unsigned long, unsigned long, unsigned long) args: (addr, old_len, new_len, flags, new_addr)
 syscall sys_setresuid16 nr 164 nbargs 3 types: (old_uid_t, old_uid_t, old_uid_t) args: (ruid, euid, suid)
-syscall sys_getresuid16 nr 165 nbargs 3 types: (old_uid_t *, old_uid_t *, old_uid_t *) args: (ruid, euid, suid)
-syscall sys_poll nr 168 nbargs 3 types: (struct pollfd *, unsigned int, long) args: (ufds, nfds, timeout_msecs)
+syscall sys_getresuid16 nr 165 nbargs 3 types: (old_uid_t *, old_uid_t *, old_uid_t *) args: (ruidp, euidp, suidp)
+syscall sys_poll nr 168 nbargs 3 types: (struct pollfd *, unsigned int, int) args: (ufds, nfds, timeout_msecs)
 syscall sys_setresgid16 nr 170 nbargs 3 types: (old_gid_t, old_gid_t, old_gid_t) args: (rgid, egid, sgid)
-syscall sys_getresgid16 nr 171 nbargs 3 types: (old_gid_t *, old_gid_t *, old_gid_t *) args: (rgid, egid, sgid)
+syscall sys_getresgid16 nr 171 nbargs 3 types: (old_gid_t *, old_gid_t *, old_gid_t *) args: (rgidp, egidp, sgidp)
 syscall sys_prctl nr 172 nbargs 5 types: (int, unsigned long, unsigned long, unsigned long, unsigned long) args: (option, arg2, arg3, arg4, arg5)
 syscall sys_rt_sigaction nr 174 nbargs 4 types: (int, const struct sigaction *, struct sigaction *, size_t) args: (sig, act, oact, sigsetsize)
-syscall sys_rt_sigprocmask nr 175 nbargs 4 types: (int, sigset_t *, sigset_t *, size_t) args: (how, set, oset, sigsetsize)
+syscall sys_rt_sigprocmask nr 175 nbargs 4 types: (int, sigset_t *, sigset_t *, size_t) args: (how, nset, oset, sigsetsize)
 syscall sys_rt_sigpending nr 176 nbargs 2 types: (sigset_t *, size_t) args: (set, sigsetsize)
 syscall sys_rt_sigtimedwait nr 177 nbargs 4 types: (const sigset_t *, siginfo_t *, const struct timespec *, size_t) args: (uthese, uinfo, uts, sigsetsize)
 syscall sys_rt_sigqueueinfo nr 178 nbargs 3 types: (pid_t, int, siginfo_t *) args: (pid, sig, uinfo)
@@ -147,9 +150,9 @@ syscall sys_getgroups nr 205 nbargs 2 types: (int, gid_t *) args: (gidsetsize, g
 syscall sys_setgroups nr 206 nbargs 2 types: (int, gid_t *) args: (gidsetsize, grouplist)
 syscall sys_fchown nr 207 nbargs 3 types: (unsigned int, uid_t, gid_t) args: (fd, user, group)
 syscall sys_setresuid nr 208 nbargs 3 types: (uid_t, uid_t, uid_t) args: (ruid, euid, suid)
-syscall sys_getresuid nr 209 nbargs 3 types: (uid_t *, uid_t *, uid_t *) args: (ruid, euid, suid)
+syscall sys_getresuid nr 209 nbargs 3 types: (uid_t *, uid_t *, uid_t *) args: (ruidp, euidp, suidp)
 syscall sys_setresgid nr 210 nbargs 3 types: (gid_t, gid_t, gid_t) args: (rgid, egid, sgid)
-syscall sys_getresgid nr 211 nbargs 3 types: (gid_t *, gid_t *, gid_t *) args: (rgid, egid, sgid)
+syscall sys_getresgid nr 211 nbargs 3 types: (gid_t *, gid_t *, gid_t *) args: (rgidp, egidp, sgidp)
 syscall sys_chown nr 212 nbargs 3 types: (const char *, uid_t, gid_t) args: (filename, user, group)
 syscall sys_setuid nr 213 nbargs 1 types: (uid_t) args: (uid)
 syscall sys_setgid nr 214 nbargs 1 types: (gid_t) args: (gid)
@@ -200,7 +203,7 @@ syscall sys_clock_getres nr 264 nbargs 2 types: (const clockid_t, struct timespe
 syscall sys_clock_nanosleep nr 265 nbargs 4 types: (const clockid_t, int, const struct timespec *, struct timespec *) args: (which_clock, flags, rqtp, rmtp)
 syscall sys_tgkill nr 268 nbargs 3 types: (pid_t, pid_t, int) args: (tgid, pid, sig)
 syscall sys_utimes nr 269 nbargs 2 types: (char *, struct timeval *) args: (filename, utimes)
-syscall sys_mq_open nr 274 nbargs 4 types: (const char *, int, mode_t, struct mq_attr *) args: (u_name, oflag, mode, u_attr)
+syscall sys_mq_open nr 274 nbargs 4 types: (const char *, int, umode_t, struct mq_attr *) args: (u_name, oflag, mode, u_attr)
 syscall sys_mq_unlink nr 275 nbargs 1 types: (const char *) args: (u_name)
 syscall sys_mq_timedsend nr 276 nbargs 5 types: (mqd_t, const char *, size_t, unsigned int, const struct timespec *) args: (mqdes, u_msg_ptr, msg_len, msg_prio, u_abs_timeout)
 syscall sys_mq_timedreceive nr 277 nbargs 5 types: (mqd_t, char *, size_t, unsigned int *, const struct timespec *) args: (mqdes, u_msg_ptr, msg_len, u_msg_prio, u_abs_timeout)
@@ -215,13 +218,13 @@ syscall sys_accept nr 285 nbargs 3 types: (int, struct sockaddr *, int *) args:
 syscall sys_getsockname nr 286 nbargs 3 types: (int, struct sockaddr *, int *) args: (fd, usockaddr, usockaddr_len)
 syscall sys_getpeername nr 287 nbargs 3 types: (int, struct sockaddr *, int *) args: (fd, usockaddr, usockaddr_len)
 syscall sys_socketpair nr 288 nbargs 4 types: (int, int, int, int *) args: (family, type, protocol, usockvec)
-syscall sys_send nr 289 nbargs 4 types: (int, void *, size_t, unsigned) args: (fd, buff, len, flags)
-syscall sys_sendto nr 290 nbargs 6 types: (int, void *, size_t, unsigned, struct sockaddr *, int) args: (fd, buff, len, flags, addr, addr_len)
-syscall sys_recvfrom nr 292 nbargs 6 types: (int, void *, size_t, unsigned, struct sockaddr *, int *) args: (fd, ubuf, size, flags, addr, addr_len)
+syscall sys_send nr 289 nbargs 4 types: (int, void *, size_t, unsigned int) args: (fd, buff, len, flags)
+syscall sys_sendto nr 290 nbargs 6 types: (int, void *, size_t, unsigned int, struct sockaddr *, int) args: (fd, buff, len, flags, addr, addr_len)
+syscall sys_recvfrom nr 292 nbargs 6 types: (int, void *, size_t, unsigned int, struct sockaddr *, int *) args: (fd, ubuf, size, flags, addr, addr_len)
 syscall sys_shutdown nr 293 nbargs 2 types: (int, int) args: (fd, how)
 syscall sys_setsockopt nr 294 nbargs 5 types: (int, int, int, char *, int) args: (fd, level, optname, optval, optlen)
 syscall sys_getsockopt nr 295 nbargs 5 types: (int, int, int, char *, int *) args: (fd, level, optname, optval, optlen)
-syscall sys_sendmsg nr 296 nbargs 3 types: (int, struct msghdr *, unsigned) args: (fd, msg, flags)
+syscall sys_sendmsg nr 296 nbargs 3 types: (int, struct msghdr *, unsigned int) args: (fd, msg, flags)
 syscall sys_recvmsg nr 297 nbargs 3 types: (int, struct msghdr *, unsigned int) args: (fd, msg, flags)
 syscall sys_semop nr 298 nbargs 3 types: (int, struct sembuf *, unsigned) args: (semid, tsops, nsops)
 syscall sys_semget nr 299 nbargs 3 types: (key_t, int, int) args: (key, nsems, semflg)
@@ -242,9 +245,9 @@ syscall sys_ioprio_get nr 315 nbargs 2 types: (int, int) args: (which, who)
 syscall sys_inotify_init nr 316 nbargs 0 types: () args: ()
 syscall sys_inotify_add_watch nr 317 nbargs 3 types: (int, const char *, u32) args: (fd, pathname, mask)
 syscall sys_inotify_rm_watch nr 318 nbargs 2 types: (int, __s32) args: (fd, wd)
-syscall sys_openat nr 322 nbargs 4 types: (int, const char *, int, int) args: (dfd, filename, flags, mode)
-syscall sys_mkdirat nr 323 nbargs 3 types: (int, const char *, int) args: (dfd, pathname, mode)
-syscall sys_mknodat nr 324 nbargs 4 types: (int, const char *, int, unsigned) args: (dfd, filename, mode, dev)
+syscall sys_openat nr 322 nbargs 4 types: (int, const char *, int, umode_t) args: (dfd, filename, flags, mode)
+syscall sys_mkdirat nr 323 nbargs 3 types: (int, const char *, umode_t) args: (dfd, pathname, mode)
+syscall sys_mknodat nr 324 nbargs 4 types: (int, const char *, umode_t, unsigned) args: (dfd, filename, mode, dev)
 syscall sys_fchownat nr 325 nbargs 5 types: (int, const char *, uid_t, gid_t, int) args: (dfd, filename, user, group, flag)
 syscall sys_futimesat nr 326 nbargs 3 types: (int, const char *, struct timeval *) args: (dfd, filename, utimes)
 syscall sys_fstatat64 nr 327 nbargs 4 types: (int, const char *, struct stat64 *, int) args: (dfd, filename, statbuf, flag)
@@ -253,7 +256,7 @@ syscall sys_renameat nr 329 nbargs 4 types: (int, const char *, int, const char
 syscall sys_linkat nr 330 nbargs 5 types: (int, const char *, int, const char *, int) args: (olddfd, oldname, newdfd, newname, flags)
 syscall sys_symlinkat nr 331 nbargs 3 types: (const char *, int, const char *) args: (oldname, newdfd, newname)
 syscall sys_readlinkat nr 332 nbargs 4 types: (int, const char *, char *, int) args: (dfd, pathname, buf, bufsiz)
-syscall sys_fchmodat nr 333 nbargs 3 types: (int, const char *, mode_t) args: (dfd, filename, mode)
+syscall sys_fchmodat nr 333 nbargs 3 types: (int, const char *, umode_t) args: (dfd, filename, mode)
 syscall sys_faccessat nr 334 nbargs 3 types: (int, const char *, int) args: (dfd, filename, mode)
 syscall sys_pselect6 nr 335 nbargs 6 types: (int, fd_set *, fd_set *, fd_set *, struct timespec *, void *) args: (n, inp, outp, exp, tsp, sig)
 syscall sys_ppoll nr 336 nbargs 5 types: (struct pollfd *, unsigned int, struct timespec *, const sigset_t *, size_t) args: (ufds, nfds, tsp, sigmask, sigsetsize)
@@ -280,6 +283,13 @@ syscall sys_inotify_init1 nr 360 nbargs 1 types: (int) args: (flags)
 syscall sys_preadv nr 361 nbargs 5 types: (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long) args: (fd, vec, vlen, pos_l, pos_h)
 syscall sys_pwritev nr 362 nbargs 5 types: (unsigned long, const struct iovec *, unsigned long, unsigned long, unsigned long) args: (fd, vec, vlen, pos_l, pos_h)
 syscall sys_rt_tgsigqueueinfo nr 363 nbargs 4 types: (pid_t, pid_t, int, siginfo_t *) args: (tgid, pid, sig, uinfo)
+syscall sys_perf_event_open nr 364 nbargs 5 types: (struct perf_event_attr *, pid_t, int, int, unsigned long) args: (attr_uptr, pid, cpu, group_fd, flags)
 syscall sys_recvmmsg nr 365 nbargs 5 types: (int, struct mmsghdr *, unsigned int, unsigned int, struct timespec *) args: (fd, mmsg, vlen, flags, timeout)
 syscall sys_accept4 nr 366 nbargs 4 types: (int, struct sockaddr *, int *, int) args: (fd, upeer_sockaddr, upeer_addrlen, flags)
 syscall sys_prlimit64 nr 369 nbargs 4 types: (pid_t, unsigned int, const struct rlimit64 *, struct rlimit64 *) args: (pid, resource, new_rlim, old_rlim)
+syscall sys_clock_adjtime nr 372 nbargs 2 types: (const clockid_t, struct timex *) args: (which_clock, utx)
+syscall sys_syncfs nr 373 nbargs 1 types: (int) args: (fd)
+syscall sys_sendmmsg nr 374 nbargs 4 types: (int, struct mmsghdr *, unsigned int, unsigned int) args: (fd, mmsg, vlen, flags)
+syscall sys_setns nr 375 nbargs 2 types: (int, int) args: (fd, nstype)
+syscall sys_process_vm_readv nr 376 nbargs 6 types: (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long) args: (pid, lvec, liovcnt, rvec, riovcnt, flags)
+syscall sys_process_vm_writev nr 377 nbargs 6 types: (pid_t, const struct iovec *, unsigned long, const struct iovec *, unsigned long, unsigned long) args: (pid, lvec, liovcnt, rvec, riovcnt, flags)
diff --git a/instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_integers.h b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers.h
similarity index 97%
rename from instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_integers.h
rename to instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers.h
index 9419331..4123feb 100644
--- a/instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_integers.h
+++ b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers.h
@@ -6,7 +6,7 @@
 
 #include <linux/tracepoint.h>
 #include <linux/syscalls.h>
-#include "arm-32-syscalls-2.6.38_integers_override.h"
+#include "arm-32-syscalls-3.5.6_integers_override.h"
 #include "syscalls_integers_override.h"
 
 SC_DECLARE_EVENT_CLASS_NOARGS(syscalls_noargs,
@@ -371,6 +371,15 @@ SC_TRACE_EVENT(sys_inotify_init1,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_syncfs
+SC_TRACE_EVENT(sys_syncfs,
+	TP_PROTO(int fd),
+	TP_ARGS(fd),
+	TP_STRUCT__entry(__field(int, fd)),
+	TP_fast_assign(tp_assign(fd, fd)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_kill
 SC_TRACE_EVENT(sys_kill,
 	TP_PROTO(pid_t pid, int sig),
@@ -436,9 +445,9 @@ SC_TRACE_EVENT(sys_ftruncate,
 #endif
 #ifndef OVERRIDE_32_sys_fchmod
 SC_TRACE_EVENT(sys_fchmod,
-	TP_PROTO(unsigned int fd, mode_t mode),
+	TP_PROTO(unsigned int fd, umode_t mode),
 	TP_ARGS(fd, mode),
-	TP_STRUCT__entry(__field(unsigned int, fd) __field(mode_t, mode)),
+	TP_STRUCT__entry(__field(unsigned int, fd) __field(umode_t, mode)),
 	TP_fast_assign(tp_assign(fd, fd) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -578,6 +587,15 @@ SC_TRACE_EVENT(sys_eventfd2,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_setns
+SC_TRACE_EVENT(sys_setns,
+	TP_PROTO(int fd, int nstype),
+	TP_ARGS(fd, nstype),
+	TP_STRUCT__entry(__field(int, fd) __field(int, nstype)),
+	TP_fast_assign(tp_assign(fd, fd) tp_assign(nstype, nstype)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_lseek
 SC_TRACE_EVENT(sys_lseek,
 	TP_PROTO(unsigned int fd, off_t offset, unsigned int origin),
@@ -829,7 +847,7 @@ SC_TRACE_EVENT(sys_keyctl,
 
 #else /* CREATE_SYSCALL_TABLE */
 
-#include "arm-32-syscalls-2.6.38_integers_override.h"
+#include "arm-32-syscalls-3.5.6_integers_override.h"
 #include "syscalls_integers_override.h"
 
 #ifndef OVERRIDE_TABLE_32_sys_restart_syscall
@@ -1141,5 +1159,11 @@ TRACE_SYSCALL_TABLE(sys_dup3, sys_dup3, 358, 3)
 #ifndef OVERRIDE_TABLE_32_sys_inotify_init1
 TRACE_SYSCALL_TABLE(sys_inotify_init1, sys_inotify_init1, 360, 1)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_syncfs
+TRACE_SYSCALL_TABLE(sys_syncfs, sys_syncfs, 373, 1)
+#endif
+#ifndef OVERRIDE_TABLE_32_sys_setns
+TRACE_SYSCALL_TABLE(sys_setns, sys_setns, 375, 2)
+#endif
 
 #endif /* CREATE_SYSCALL_TABLE */
diff --git a/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers_override.h b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers_override.h
new file mode 100644
index 0000000..cc4a10e
--- /dev/null
+++ b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_integers_override.h
@@ -0,0 +1,70 @@
+
+
+#define OVERRIDE_TABLE_32_sys_arm_fadvise64_64
+#define OVERRIDE_TABLE_32_sys_sync_file_range2
+#define OVERRIDE_TABLE_32_sys_set_tls
+
+#ifndef CREATE_SYSCALL_TABLE
+
+SC_TRACE_EVENT(sys_arm_fadvise64_64,
+	TP_PROTO(int fd, int advice, loff_t offset, loff_t len),
+	TP_ARGS(fd, advice, offset, len),
+	TP_STRUCT__entry(
+		__field_hex(int, fd)
+		__field_hex(int, advice)
+		__field_hex(loff_t, offset)
+		__field_hex(loff_t, len)),
+	TP_fast_assign(
+		tp_assign(fd, fd)
+		tp_assign(advice, advice)
+		tp_assign(offset, offset)
+		tp_assign(len, len)),
+	TP_printk()
+)
+
+SC_TRACE_EVENT(sys_sync_file_range2,
+	TP_PROTO(int fd, loff_t offset, loff_t nbytes, unsigned int flags),
+	TP_ARGS(fd, offset, nbytes, flags),
+	TP_STRUCT__entry(
+		__field_hex(int, fd)
+		__field_hex(loff_t, offset)
+		__field_hex(loff_t, nbytes)
+		__field_hex(unsigned int, flags)),
+	TP_fast_assign(
+		tp_assign(fd, fd)
+		tp_assign(offset, offset)
+		tp_assign(nbytes, nbytes)
+		tp_assign(flags, flags)),
+	TP_printk()
+)
+
+SC_TRACE_EVENT(sys_set_tls,
+	TP_PROTO(unsigned int tid, unsigned long tls),
+	TP_ARGS(tid, tls),
+	TP_STRUCT__entry(
+		__field(unsigned int, tid)
+		__field_hex(unsigned int, tls)),
+	TP_fast_assign(
+		tp_assign(tid, tid)
+		tp_assign(tls, tls)),
+	TP_printk()
+)
+
+#else	/* CREATE_SYSCALL_TABLE */
+
+#define OVVERRIDE_TABLE_32_sys_mmap
+TRACE_SYSCALL_TABLE(sys_mmap, sys_mmap, 90, 6) 
+
+#define OVERRIDE_TABLE_32_sys_arm_fadvise64_64
+TRACE_SYSCALL_TABLE(sys_arm_fadvise64_64, sys_arm_fadvise64_64, 270, 4)
+#define OVERRIDE_TABLE_32_sys_sync_file_range2
+TRACE_SYSCALL_TABLE(sys_sync_file_range2, sys_sync_file_range2, 341, 4)
+#if 0
+#define OVERRIDE_TABLE_32_sys_set_tls
+TRACE_SYSCALL_TABLE(sys_set_tls, sys_set_tls, 0xf0005, 2)
+#endif
+
+
+#endif /* CREATE_SYSCALL_TABLE */
+
+
diff --git a/instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_pointers.h b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_pointers.h
similarity index 91%
rename from instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_pointers.h
rename to instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_pointers.h
index fc3d8a1..f6b5086 100644
--- a/instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_pointers.h
+++ b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_pointers.h
@@ -6,7 +6,7 @@
 
 #include <linux/tracepoint.h>
 #include <linux/syscalls.h>
-#include "arm-32-syscalls-2.6.38_pointers_override.h"
+#include "arm-32-syscalls-3.5.6_pointers_override.h"
 #include "syscalls_pointers_override.h"
 
 #ifndef OVERRIDE_32_sys_unlink
@@ -81,6 +81,15 @@ SC_TRACE_EVENT(sys_uselib,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_swapoff
+SC_TRACE_EVENT(sys_swapoff,
+	TP_PROTO(const char * specialfile),
+	TP_ARGS(specialfile),
+	TP_STRUCT__entry(__string_from_user(specialfile, specialfile)),
+	TP_fast_assign(tp_copy_string_from_user(specialfile, specialfile)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_sysinfo
 SC_TRACE_EVENT(sys_sysinfo,
 	TP_PROTO(struct sysinfo * info),
@@ -146,9 +155,9 @@ SC_TRACE_EVENT(sys_shmdt,
 #endif
 #ifndef OVERRIDE_32_sys_creat
 SC_TRACE_EVENT(sys_creat,
-	TP_PROTO(const char * pathname, int mode),
+	TP_PROTO(const char * pathname, umode_t mode),
 	TP_ARGS(pathname, mode),
-	TP_STRUCT__entry(__string_from_user(pathname, pathname) __field(int, mode)),
+	TP_STRUCT__entry(__string_from_user(pathname, pathname) __field(umode_t, mode)),
 	TP_fast_assign(tp_copy_string_from_user(pathname, pathname) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -164,9 +173,9 @@ SC_TRACE_EVENT(sys_link,
 #endif
 #ifndef OVERRIDE_32_sys_chmod
 SC_TRACE_EVENT(sys_chmod,
-	TP_PROTO(const char * filename, mode_t mode),
+	TP_PROTO(const char * filename, umode_t mode),
 	TP_ARGS(filename, mode),
-	TP_STRUCT__entry(__string_from_user(filename, filename) __field(mode_t, mode)),
+	TP_STRUCT__entry(__string_from_user(filename, filename) __field(umode_t, mode)),
 	TP_fast_assign(tp_copy_string_from_user(filename, filename) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -191,9 +200,9 @@ SC_TRACE_EVENT(sys_rename,
 #endif
 #ifndef OVERRIDE_32_sys_mkdir
 SC_TRACE_EVENT(sys_mkdir,
-	TP_PROTO(const char * pathname, int mode),
+	TP_PROTO(const char * pathname, umode_t mode),
 	TP_ARGS(pathname, mode),
-	TP_STRUCT__entry(__string_from_user(pathname, pathname) __field(int, mode)),
+	TP_STRUCT__entry(__string_from_user(pathname, pathname) __field(umode_t, mode)),
 	TP_fast_assign(tp_copy_string_from_user(pathname, pathname) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -288,6 +297,15 @@ SC_TRACE_EVENT(sys_symlink,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_swapon
+SC_TRACE_EVENT(sys_swapon,
+	TP_PROTO(const char * specialfile, int swap_flags),
+	TP_ARGS(specialfile, swap_flags),
+	TP_STRUCT__entry(__string_from_user(specialfile, specialfile) __field(int, swap_flags)),
+	TP_fast_assign(tp_copy_string_from_user(specialfile, specialfile) tp_assign(swap_flags, swap_flags)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_truncate
 SC_TRACE_EVENT(sys_truncate,
 	TP_PROTO(const char * path, long length),
@@ -612,6 +630,15 @@ SC_TRACE_EVENT(sys_pipe2,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_clock_adjtime
+SC_TRACE_EVENT(sys_clock_adjtime,
+	TP_PROTO(const clockid_t which_clock, struct timex * utx),
+	TP_ARGS(which_clock, utx),
+	TP_STRUCT__entry(__field(const clockid_t, which_clock) __field_hex(struct timex *, utx)),
+	TP_fast_assign(tp_assign(which_clock, which_clock) tp_assign(utx, utx)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_read
 SC_TRACE_EVENT(sys_read,
 	TP_PROTO(unsigned int fd, char * buf, size_t count),
@@ -632,18 +659,18 @@ SC_TRACE_EVENT(sys_write,
 #endif
 #ifndef OVERRIDE_32_sys_open
 SC_TRACE_EVENT(sys_open,
-	TP_PROTO(const char * filename, int flags, int mode),
+	TP_PROTO(const char * filename, int flags, umode_t mode),
 	TP_ARGS(filename, flags, mode),
-	TP_STRUCT__entry(__string_from_user(filename, filename) __field(int, flags) __field(int, mode)),
+	TP_STRUCT__entry(__string_from_user(filename, filename) __field(int, flags) __field(umode_t, mode)),
 	TP_fast_assign(tp_copy_string_from_user(filename, filename) tp_assign(flags, flags) tp_assign(mode, mode)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_mknod
 SC_TRACE_EVENT(sys_mknod,
-	TP_PROTO(const char * filename, int mode, unsigned dev),
+	TP_PROTO(const char * filename, umode_t mode, unsigned dev),
 	TP_ARGS(filename, mode, dev),
-	TP_STRUCT__entry(__string_from_user(filename, filename) __field(int, mode) __field(unsigned, dev)),
+	TP_STRUCT__entry(__string_from_user(filename, filename) __field(umode_t, mode) __field(unsigned, dev)),
 	TP_fast_assign(tp_copy_string_from_user(filename, filename) tp_assign(mode, mode) tp_assign(dev, dev)),
 	TP_printk()
 )
@@ -686,10 +713,10 @@ SC_TRACE_EVENT(sys_setitimer,
 #endif
 #ifndef OVERRIDE_32_sys_sigprocmask
 SC_TRACE_EVENT(sys_sigprocmask,
-	TP_PROTO(int how, old_sigset_t * set, old_sigset_t * oset),
-	TP_ARGS(how, set, oset),
-	TP_STRUCT__entry(__field(int, how) __field_hex(old_sigset_t *, set) __field_hex(old_sigset_t *, oset)),
-	TP_fast_assign(tp_assign(how, how) tp_assign(set, set) tp_assign(oset, oset)),
+	TP_PROTO(int how, old_sigset_t * nset, old_sigset_t * oset),
+	TP_ARGS(how, nset, oset),
+	TP_STRUCT__entry(__field(int, how) __field_hex(old_sigset_t *, nset) __field_hex(old_sigset_t *, oset)),
+	TP_fast_assign(tp_assign(how, how) tp_assign(nset, nset) tp_assign(oset, oset)),
 	TP_printk()
 )
 #endif
@@ -740,28 +767,28 @@ SC_TRACE_EVENT(sys_sched_setscheduler,
 #endif
 #ifndef OVERRIDE_32_sys_getresuid16
 SC_TRACE_EVENT(sys_getresuid16,
-	TP_PROTO(old_uid_t * ruid, old_uid_t * euid, old_uid_t * suid),
-	TP_ARGS(ruid, euid, suid),
-	TP_STRUCT__entry(__field_hex(old_uid_t *, ruid) __field_hex(old_uid_t *, euid) __field_hex(old_uid_t *, suid)),
-	TP_fast_assign(tp_assign(ruid, ruid) tp_assign(euid, euid) tp_assign(suid, suid)),
+	TP_PROTO(old_uid_t * ruidp, old_uid_t * euidp, old_uid_t * suidp),
+	TP_ARGS(ruidp, euidp, suidp),
+	TP_STRUCT__entry(__field_hex(old_uid_t *, ruidp) __field_hex(old_uid_t *, euidp) __field_hex(old_uid_t *, suidp)),
+	TP_fast_assign(tp_assign(ruidp, ruidp) tp_assign(euidp, euidp) tp_assign(suidp, suidp)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_poll
 SC_TRACE_EVENT(sys_poll,
-	TP_PROTO(struct pollfd * ufds, unsigned int nfds, long timeout_msecs),
+	TP_PROTO(struct pollfd * ufds, unsigned int nfds, int timeout_msecs),
 	TP_ARGS(ufds, nfds, timeout_msecs),
-	TP_STRUCT__entry(__field_hex(struct pollfd *, ufds) __field(unsigned int, nfds) __field(long, timeout_msecs)),
+	TP_STRUCT__entry(__field_hex(struct pollfd *, ufds) __field(unsigned int, nfds) __field(int, timeout_msecs)),
 	TP_fast_assign(tp_assign(ufds, ufds) tp_assign(nfds, nfds) tp_assign(timeout_msecs, timeout_msecs)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_getresgid16
 SC_TRACE_EVENT(sys_getresgid16,
-	TP_PROTO(old_gid_t * rgid, old_gid_t * egid, old_gid_t * sgid),
-	TP_ARGS(rgid, egid, sgid),
-	TP_STRUCT__entry(__field_hex(old_gid_t *, rgid) __field_hex(old_gid_t *, egid) __field_hex(old_gid_t *, sgid)),
-	TP_fast_assign(tp_assign(rgid, rgid) tp_assign(egid, egid) tp_assign(sgid, sgid)),
+	TP_PROTO(old_gid_t * rgidp, old_gid_t * egidp, old_gid_t * sgidp),
+	TP_ARGS(rgidp, egidp, sgidp),
+	TP_STRUCT__entry(__field_hex(old_gid_t *, rgidp) __field_hex(old_gid_t *, egidp) __field_hex(old_gid_t *, sgidp)),
+	TP_fast_assign(tp_assign(rgidp, rgidp) tp_assign(egidp, egidp) tp_assign(sgidp, sgidp)),
 	TP_printk()
 )
 #endif
@@ -794,19 +821,19 @@ SC_TRACE_EVENT(sys_lchown,
 #endif
 #ifndef OVERRIDE_32_sys_getresuid
 SC_TRACE_EVENT(sys_getresuid,
-	TP_PROTO(uid_t * ruid, uid_t * euid, uid_t * suid),
-	TP_ARGS(ruid, euid, suid),
-	TP_STRUCT__entry(__field_hex(uid_t *, ruid) __field_hex(uid_t *, euid) __field_hex(uid_t *, suid)),
-	TP_fast_assign(tp_assign(ruid, ruid) tp_assign(euid, euid) tp_assign(suid, suid)),
+	TP_PROTO(uid_t * ruidp, uid_t * euidp, uid_t * suidp),
+	TP_ARGS(ruidp, euidp, suidp),
+	TP_STRUCT__entry(__field_hex(uid_t *, ruidp) __field_hex(uid_t *, euidp) __field_hex(uid_t *, suidp)),
+	TP_fast_assign(tp_assign(ruidp, ruidp) tp_assign(euidp, euidp) tp_assign(suidp, suidp)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_getresgid
 SC_TRACE_EVENT(sys_getresgid,
-	TP_PROTO(gid_t * rgid, gid_t * egid, gid_t * sgid),
-	TP_ARGS(rgid, egid, sgid),
-	TP_STRUCT__entry(__field_hex(gid_t *, rgid) __field_hex(gid_t *, egid) __field_hex(gid_t *, sgid)),
-	TP_fast_assign(tp_assign(rgid, rgid) tp_assign(egid, egid) tp_assign(sgid, sgid)),
+	TP_PROTO(gid_t * rgidp, gid_t * egidp, gid_t * sgidp),
+	TP_ARGS(rgidp, egidp, sgidp),
+	TP_STRUCT__entry(__field_hex(gid_t *, rgidp) __field_hex(gid_t *, egidp) __field_hex(gid_t *, sgidp)),
+	TP_fast_assign(tp_assign(rgidp, rgidp) tp_assign(egidp, egidp) tp_assign(sgidp, sgidp)),
 	TP_printk()
 )
 #endif
@@ -965,9 +992,9 @@ SC_TRACE_EVENT(sys_getpeername,
 #endif
 #ifndef OVERRIDE_32_sys_sendmsg
 SC_TRACE_EVENT(sys_sendmsg,
-	TP_PROTO(int fd, struct msghdr * msg, unsigned flags),
+	TP_PROTO(int fd, struct msghdr * msg, unsigned int flags),
 	TP_ARGS(fd, msg, flags),
-	TP_STRUCT__entry(__field(int, fd) __field_hex(struct msghdr *, msg) __field(unsigned, flags)),
+	TP_STRUCT__entry(__field(int, fd) __field_hex(struct msghdr *, msg) __field(unsigned int, flags)),
 	TP_fast_assign(tp_assign(fd, fd) tp_assign(msg, msg) tp_assign(flags, flags)),
 	TP_printk()
 )
@@ -1028,9 +1055,9 @@ SC_TRACE_EVENT(sys_inotify_add_watch,
 #endif
 #ifndef OVERRIDE_32_sys_mkdirat
 SC_TRACE_EVENT(sys_mkdirat,
-	TP_PROTO(int dfd, const char * pathname, int mode),
+	TP_PROTO(int dfd, const char * pathname, umode_t mode),
 	TP_ARGS(dfd, pathname, mode),
-	TP_STRUCT__entry(__field(int, dfd) __string_from_user(pathname, pathname) __field(int, mode)),
+	TP_STRUCT__entry(__field(int, dfd) __string_from_user(pathname, pathname) __field(umode_t, mode)),
 	TP_fast_assign(tp_assign(dfd, dfd) tp_copy_string_from_user(pathname, pathname) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -1064,9 +1091,9 @@ SC_TRACE_EVENT(sys_symlinkat,
 #endif
 #ifndef OVERRIDE_32_sys_fchmodat
 SC_TRACE_EVENT(sys_fchmodat,
-	TP_PROTO(int dfd, const char * filename, mode_t mode),
+	TP_PROTO(int dfd, const char * filename, umode_t mode),
 	TP_ARGS(dfd, filename, mode),
-	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(mode_t, mode)),
+	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(umode_t, mode)),
 	TP_fast_assign(tp_assign(dfd, dfd) tp_copy_string_from_user(filename, filename) tp_assign(mode, mode)),
 	TP_printk()
 )
@@ -1125,6 +1152,15 @@ SC_TRACE_EVENT(sys_wait4,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_quotactl
+SC_TRACE_EVENT(sys_quotactl,
+	TP_PROTO(unsigned int cmd, const char * special, qid_t id, void * addr),
+	TP_ARGS(cmd, special, id, addr),
+	TP_STRUCT__entry(__field(unsigned int, cmd) __field_hex(const char *, special) __field(qid_t, id) __field_hex(void *, addr)),
+	TP_fast_assign(tp_assign(cmd, cmd) tp_assign(special, special) tp_assign(id, id) tp_assign(addr, addr)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_rt_sigaction
 SC_TRACE_EVENT(sys_rt_sigaction,
 	TP_PROTO(int sig, const struct sigaction * act, struct sigaction * oact, size_t sigsetsize),
@@ -1136,10 +1172,10 @@ SC_TRACE_EVENT(sys_rt_sigaction,
 #endif
 #ifndef OVERRIDE_32_sys_rt_sigprocmask
 SC_TRACE_EVENT(sys_rt_sigprocmask,
-	TP_PROTO(int how, sigset_t * set, sigset_t * oset, size_t sigsetsize),
-	TP_ARGS(how, set, oset, sigsetsize),
-	TP_STRUCT__entry(__field(int, how) __field_hex(sigset_t *, set) __field_hex(sigset_t *, oset) __field(size_t, sigsetsize)),
-	TP_fast_assign(tp_assign(how, how) tp_assign(set, set) tp_assign(oset, oset) tp_assign(sigsetsize, sigsetsize)),
+	TP_PROTO(int how, sigset_t * nset, sigset_t * oset, size_t sigsetsize),
+	TP_ARGS(how, nset, oset, sigsetsize),
+	TP_STRUCT__entry(__field(int, how) __field_hex(sigset_t *, nset) __field_hex(sigset_t *, oset) __field(size_t, sigsetsize)),
+	TP_fast_assign(tp_assign(how, how) tp_assign(nset, nset) tp_assign(oset, oset) tp_assign(sigsetsize, sigsetsize)),
 	TP_printk()
 )
 #endif
@@ -1235,9 +1271,9 @@ SC_TRACE_EVENT(sys_clock_nanosleep,
 #endif
 #ifndef OVERRIDE_32_sys_mq_open
 SC_TRACE_EVENT(sys_mq_open,
-	TP_PROTO(const char * u_name, int oflag, mode_t mode, struct mq_attr * u_attr),
+	TP_PROTO(const char * u_name, int oflag, umode_t mode, struct mq_attr * u_attr),
 	TP_ARGS(u_name, oflag, mode, u_attr),
-	TP_STRUCT__entry(__string_from_user(u_name, u_name) __field(int, oflag) __field(mode_t, mode) __field_hex(struct mq_attr *, u_attr)),
+	TP_STRUCT__entry(__string_from_user(u_name, u_name) __field(int, oflag) __field(umode_t, mode) __field_hex(struct mq_attr *, u_attr)),
 	TP_fast_assign(tp_copy_string_from_user(u_name, u_name) tp_assign(oflag, oflag) tp_assign(mode, mode) tp_assign(u_attr, u_attr)),
 	TP_printk()
 )
@@ -1253,9 +1289,9 @@ SC_TRACE_EVENT(sys_socketpair,
 #endif
 #ifndef OVERRIDE_32_sys_send
 SC_TRACE_EVENT(sys_send,
-	TP_PROTO(int fd, void * buff, size_t len, unsigned flags),
+	TP_PROTO(int fd, void * buff, size_t len, unsigned int flags),
 	TP_ARGS(fd, buff, len, flags),
-	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, buff) __field(size_t, len) __field(unsigned, flags)),
+	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, buff) __field(size_t, len) __field(unsigned int, flags)),
 	TP_fast_assign(tp_assign(fd, fd) tp_assign(buff, buff) tp_assign(len, len) tp_assign(flags, flags)),
 	TP_printk()
 )
@@ -1289,18 +1325,18 @@ SC_TRACE_EVENT(sys_semtimedop,
 #endif
 #ifndef OVERRIDE_32_sys_openat
 SC_TRACE_EVENT(sys_openat,
-	TP_PROTO(int dfd, const char * filename, int flags, int mode),
+	TP_PROTO(int dfd, const char * filename, int flags, umode_t mode),
 	TP_ARGS(dfd, filename, flags, mode),
-	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(int, flags) __field(int, mode)),
+	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(int, flags) __field(umode_t, mode)),
 	TP_fast_assign(tp_assign(dfd, dfd) tp_copy_string_from_user(filename, filename) tp_assign(flags, flags) tp_assign(mode, mode)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_mknodat
 SC_TRACE_EVENT(sys_mknodat,
-	TP_PROTO(int dfd, const char * filename, int mode, unsigned dev),
+	TP_PROTO(int dfd, const char * filename, umode_t mode, unsigned dev),
 	TP_ARGS(dfd, filename, mode, dev),
-	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(int, mode) __field(unsigned, dev)),
+	TP_STRUCT__entry(__field(int, dfd) __string_from_user(filename, filename) __field(umode_t, mode) __field(unsigned, dev)),
 	TP_fast_assign(tp_assign(dfd, dfd) tp_copy_string_from_user(filename, filename) tp_assign(mode, mode) tp_assign(dev, dev)),
 	TP_printk()
 )
@@ -1395,6 +1431,15 @@ SC_TRACE_EVENT(sys_prlimit64,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_sendmmsg
+SC_TRACE_EVENT(sys_sendmmsg,
+	TP_PROTO(int fd, struct mmsghdr * mmsg, unsigned int vlen, unsigned int flags),
+	TP_ARGS(fd, mmsg, vlen, flags),
+	TP_STRUCT__entry(__field(int, fd) __field_hex(struct mmsghdr *, mmsg) __field(unsigned int, vlen) __field(unsigned int, flags)),
+	TP_fast_assign(tp_assign(fd, fd) tp_assign(mmsg, mmsg) tp_assign(vlen, vlen) tp_assign(flags, flags)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_mount
 SC_TRACE_EVENT(sys_mount,
 	TP_PROTO(char * dev_name, char * dir_name, char * type, unsigned long flags, void * data),
@@ -1566,6 +1611,15 @@ SC_TRACE_EVENT(sys_pwritev,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_perf_event_open
+SC_TRACE_EVENT(sys_perf_event_open,
+	TP_PROTO(struct perf_event_attr * attr_uptr, pid_t pid, int cpu, int group_fd, unsigned long flags),
+	TP_ARGS(attr_uptr, pid, cpu, group_fd, flags),
+	TP_STRUCT__entry(__field_hex(struct perf_event_attr *, attr_uptr) __field(pid_t, pid) __field(int, cpu) __field(int, group_fd) __field(unsigned long, flags)),
+	TP_fast_assign(tp_assign(attr_uptr, attr_uptr) tp_assign(pid, pid) tp_assign(cpu, cpu) tp_assign(group_fd, group_fd) tp_assign(flags, flags)),
+	TP_printk()
+)
+#endif
 #ifndef OVERRIDE_32_sys_recvmmsg
 SC_TRACE_EVENT(sys_recvmmsg,
 	TP_PROTO(int fd, struct mmsghdr * mmsg, unsigned int vlen, unsigned int flags, struct timespec * timeout),
@@ -1586,18 +1640,18 @@ SC_TRACE_EVENT(sys_futex,
 #endif
 #ifndef OVERRIDE_32_sys_sendto
 SC_TRACE_EVENT(sys_sendto,
-	TP_PROTO(int fd, void * buff, size_t len, unsigned flags, struct sockaddr * addr, int addr_len),
+	TP_PROTO(int fd, void * buff, size_t len, unsigned int flags, struct sockaddr * addr, int addr_len),
 	TP_ARGS(fd, buff, len, flags, addr, addr_len),
-	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, buff) __field(size_t, len) __field(unsigned, flags) __field_hex(struct sockaddr *, addr) __field_hex(int, addr_len)),
+	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, buff) __field(size_t, len) __field(unsigned int, flags) __field_hex(struct sockaddr *, addr) __field_hex(int, addr_len)),
 	TP_fast_assign(tp_assign(fd, fd) tp_assign(buff, buff) tp_assign(len, len) tp_assign(flags, flags) tp_assign(addr, addr) tp_assign(addr_len, addr_len)),
 	TP_printk()
 )
 #endif
 #ifndef OVERRIDE_32_sys_recvfrom
 SC_TRACE_EVENT(sys_recvfrom,
-	TP_PROTO(int fd, void * ubuf, size_t size, unsigned flags, struct sockaddr * addr, int * addr_len),
+	TP_PROTO(int fd, void * ubuf, size_t size, unsigned int flags, struct sockaddr * addr, int * addr_len),
 	TP_ARGS(fd, ubuf, size, flags, addr, addr_len),
-	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, ubuf) __field(size_t, size) __field(unsigned, flags) __field_hex(struct sockaddr *, addr) __field_hex(int *, addr_len)),
+	TP_STRUCT__entry(__field(int, fd) __field_hex(void *, ubuf) __field(size_t, size) __field(unsigned int, flags) __field_hex(struct sockaddr *, addr) __field_hex(int *, addr_len)),
 	TP_fast_assign(tp_assign(fd, fd) tp_assign(ubuf, ubuf) tp_assign(size, size) tp_assign(flags, flags) tp_assign(addr, addr) tp_assign(addr_len, addr_len)),
 	TP_printk()
 )
@@ -1629,6 +1683,24 @@ SC_TRACE_EVENT(sys_epoll_pwait,
 	TP_printk()
 )
 #endif
+#ifndef OVERRIDE_32_sys_process_vm_readv
+SC_TRACE_EVENT(sys_process_vm_readv,
+	TP_PROTO(pid_t pid, const struct iovec * lvec, unsigned long liovcnt, const struct iovec * rvec, unsigned long riovcnt, unsigned long flags),
+	TP_ARGS(pid, lvec, liovcnt, rvec, riovcnt, flags),
+	TP_STRUCT__entry(__field(pid_t, pid) __field_hex(const struct iovec *, lvec) __field(unsigned long, liovcnt) __field_hex(const struct iovec *, rvec) __field(unsigned long, riovcnt) __field(unsigned long, flags)),
+	TP_fast_assign(tp_assign(pid, pid) tp_assign(lvec, lvec) tp_assign(liovcnt, liovcnt) tp_assign(rvec, rvec) tp_assign(riovcnt, riovcnt) tp_assign(flags, flags)),
+	TP_printk()
+)
+#endif
+#ifndef OVERRIDE_32_sys_process_vm_writev
+SC_TRACE_EVENT(sys_process_vm_writev,
+	TP_PROTO(pid_t pid, const struct iovec * lvec, unsigned long liovcnt, const struct iovec * rvec, unsigned long riovcnt, unsigned long flags),
+	TP_ARGS(pid, lvec, liovcnt, rvec, riovcnt, flags),
+	TP_STRUCT__entry(__field(pid_t, pid) __field_hex(const struct iovec *, lvec) __field(unsigned long, liovcnt) __field_hex(const struct iovec *, rvec) __field(unsigned long, riovcnt) __field(unsigned long, flags)),
+	TP_fast_assign(tp_assign(pid, pid) tp_assign(lvec, lvec) tp_assign(liovcnt, liovcnt) tp_assign(rvec, rvec) tp_assign(riovcnt, riovcnt) tp_assign(flags, flags)),
+	TP_printk()
+)
+#endif
 
 #endif /*  _TRACE_SYSCALLS_POINTERS_H */
 
@@ -1637,7 +1709,7 @@ SC_TRACE_EVENT(sys_epoll_pwait,
 
 #else /* CREATE_SYSCALL_TABLE */
 
-#include "arm-32-syscalls-2.6.38_pointers_override.h"
+#include "arm-32-syscalls-3.5.6_pointers_override.h"
 #include "syscalls_pointers_override.h"
 
 #ifndef OVERRIDE_TABLE_32_sys_read
@@ -1733,6 +1805,9 @@ TRACE_SYSCALL_TABLE(sys_readlink, sys_readlink, 85, 3)
 #ifndef OVERRIDE_TABLE_32_sys_uselib
 TRACE_SYSCALL_TABLE(sys_uselib, sys_uselib, 86, 1)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_swapon
+TRACE_SYSCALL_TABLE(sys_swapon, sys_swapon, 87, 2)
+#endif
 #ifndef OVERRIDE_TABLE_32_sys_reboot
 TRACE_SYSCALL_TABLE(sys_reboot, sys_reboot, 88, 4)
 #endif
@@ -1766,6 +1841,9 @@ TRACE_SYSCALL_TABLE(sys_newfstat, sys_newfstat, 108, 2)
 #ifndef OVERRIDE_TABLE_32_sys_wait4
 TRACE_SYSCALL_TABLE(sys_wait4, sys_wait4, 114, 4)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_swapoff
+TRACE_SYSCALL_TABLE(sys_swapoff, sys_swapoff, 115, 1)
+#endif
 #ifndef OVERRIDE_TABLE_32_sys_sysinfo
 TRACE_SYSCALL_TABLE(sys_sysinfo, sys_sysinfo, 116, 1)
 #endif
@@ -1787,6 +1865,9 @@ TRACE_SYSCALL_TABLE(sys_init_module, sys_init_module, 128, 3)
 #ifndef OVERRIDE_TABLE_32_sys_delete_module
 TRACE_SYSCALL_TABLE(sys_delete_module, sys_delete_module, 129, 2)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_quotactl
+TRACE_SYSCALL_TABLE(sys_quotactl, sys_quotactl, 131, 4)
+#endif
 #ifndef OVERRIDE_TABLE_32_sys_llseek
 TRACE_SYSCALL_TABLE(sys_llseek, sys_llseek, 140, 5)
 #endif
@@ -2171,6 +2252,9 @@ TRACE_SYSCALL_TABLE(sys_pwritev, sys_pwritev, 362, 5)
 #ifndef OVERRIDE_TABLE_32_sys_rt_tgsigqueueinfo
 TRACE_SYSCALL_TABLE(sys_rt_tgsigqueueinfo, sys_rt_tgsigqueueinfo, 363, 4)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_perf_event_open
+TRACE_SYSCALL_TABLE(sys_perf_event_open, sys_perf_event_open, 364, 5)
+#endif
 #ifndef OVERRIDE_TABLE_32_sys_recvmmsg
 TRACE_SYSCALL_TABLE(sys_recvmmsg, sys_recvmmsg, 365, 5)
 #endif
@@ -2180,5 +2264,17 @@ TRACE_SYSCALL_TABLE(sys_accept4, sys_accept4, 366, 4)
 #ifndef OVERRIDE_TABLE_32_sys_prlimit64
 TRACE_SYSCALL_TABLE(sys_prlimit64, sys_prlimit64, 369, 4)
 #endif
+#ifndef OVERRIDE_TABLE_32_sys_clock_adjtime
+TRACE_SYSCALL_TABLE(sys_clock_adjtime, sys_clock_adjtime, 372, 2)
+#endif
+#ifndef OVERRIDE_TABLE_32_sys_sendmmsg
+TRACE_SYSCALL_TABLE(sys_sendmmsg, sys_sendmmsg, 374, 4)
+#endif
+#ifndef OVERRIDE_TABLE_32_sys_process_vm_readv
+TRACE_SYSCALL_TABLE(sys_process_vm_readv, sys_process_vm_readv, 376, 6)
+#endif
+#ifndef OVERRIDE_TABLE_32_sys_process_vm_writev
+TRACE_SYSCALL_TABLE(sys_process_vm_writev, sys_process_vm_writev, 377, 6)
+#endif
 
 #endif /* CREATE_SYSCALL_TABLE */
diff --git a/instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_pointers_override.h b/instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_pointers_override.h
similarity index 100%
rename from instrumentation/syscalls/headers/arm-32-syscalls-2.6.38_pointers_override.h
rename to instrumentation/syscalls/headers/arm-32-syscalls-3.5.6_pointers_override.h
diff --git a/instrumentation/syscalls/headers/syscalls_integers.h b/instrumentation/syscalls/headers/syscalls_integers.h
index 002130a..d1c3ef3 100644
--- a/instrumentation/syscalls/headers/syscalls_integers.h
+++ b/instrumentation/syscalls/headers/syscalls_integers.h
@@ -7,5 +7,5 @@
 #endif
 
 #ifdef CONFIG_ARM
-#include "arm-32-syscalls-2.6.38_integers.h"
+#include "arm-32-syscalls-3.5.6_integers.h"
 #endif
diff --git a/instrumentation/syscalls/headers/syscalls_pointers.h b/instrumentation/syscalls/headers/syscalls_pointers.h
index 11b4979..2be417e 100644
--- a/instrumentation/syscalls/headers/syscalls_pointers.h
+++ b/instrumentation/syscalls/headers/syscalls_pointers.h
@@ -7,5 +7,5 @@
 #endif
 
 #ifdef CONFIG_ARM
-#include "arm-32-syscalls-2.6.38_pointers.h"
+#include "arm-32-syscalls-3.5.6_pointers.h"
 #endif
-- 
1.8.2.3

