#!/bin/sh
#
# Copyright 2007-2012 Mentor Graphics Corporation
#
# This file is licensed under the terms of the GNU General Public License
# version 2.  This program  is licensed "as is" without any warranty of any
# kind, whether express or implied.
#
# Usage: setup-builddir [BUILDDIR [MACHINE]]
#
# If machine is specified, the script will search for layers and add any
# layers with the machine configuration for this machine to the base layers
# defined in the bblayers.conf.sample in the template directory.
#
# By default, we set BB_NUMBER_THREADS to $NCPU * 1.5 and PARALLEL_MAKE to
# $NCPU * 2
JOBS_FACTOR="2"
THREADS_FACTOR="3 / 2"

abspath () {
    _path="$1"
    if [ -n "${_path##/*}" ]; then
        _path="$PWD/$1"
    fi
    echo "$_path"
}

MELDIR=$(cd ${0%/*}/../.. && pwd)
BUILDDIR=$1
if [ -z $BUILDDIR ]; then
    BUILDDIR=$PWD/build
fi
BUILDDIR=$(abspath $BUILDDIR)
MACHINE=$2

find_layers () {
    for i in $MELDIR/*/conf/layer.conf $MELDIR/*/*/conf/layer.conf; do
        if [ -e "$i" ]; then
            echo $i | sed 's,/conf/layer.conf$,,'
        fi
    done | sort -u
}
machine_layers () {
    find_layers | while read layer; do
        if [ -e $layer/conf/machine/$1.conf ]; then
            echo $layer
        fi
    done
}
base_layers () {
    # Extract base layer list from bblayers.conf.sample
    sed -n '/^BBLAYERS/{s/^[^"]*"//; :start; /\\$/{s/ *\\$//; p; n; b start}; s/"//; p}' $TEMPLATECONF/bblayers.conf.sample | sed -e"s,\${MELDIR},$MELDIR,; s,##COREBASE##,$MELDIR/poky,g" | sort -u | while read layer; do
        if [ -n "$layer" -a -e "$layer" ]; then
            echo $layer
        fi
    done
}
layer_priority () {
    case $1 in
        */meta-oe)
            # Terrible hack
            echo 1
            ;;
        *)
            sed -n "s,BBFILE_PRIORITY_[^ ]* *= *[\"']\(.*\)[\"']$,\1,p" $1/conf/layer.conf
            ;;
    esac
}
prioritized_layers () {
    layerfile=`mktemp`
    trap "rm -f $layerfile" EXIT

    machine_layers $MACHINE >>$layerfile
    if [ `wc -l $layerfile|awk '{print $1}'` = 0 ]; then
        echo >&2 "Unable to find machine .conf for $MACHINE"
        exit 2
    fi
    base_layers >>$layerfile

    cat $layerfile | sort -u | while read layer; do
        priority=`layer_priority $layer`
        echo $layer $priority
    done | sort -n -k2 -r | cut -d" " -f1
}

# We'll be reconfiguring the build directory, so let the user back out
if [ -n "$MACHINE" ] &&
   [ -e $BUILDDIR/conf/bblayers.conf -o -e $BUILDDIR/conf/layer.conf ] &&
   [ "$MACHINE" != "$(sed -n '/^MACHINE /s/.*"\(.*\)"/\1/p' conf/local.conf)" ]; then
    echo >&2 "Build directory is configured, but machine was specified."
    while true; do
        read -p "Reconfigure for $MACHINE (Y|n)? " reconfigure
        case $reconfigure in
            [nN])
                echo >&2 "Aborting at user request"
                exit 2
                ;;
            ""|[yY])
                break
                ;;
            *)
                echo >&2 "Invalid input: $reconfigure"
                ;;
        esac
    done
fi

mkdir -p $BUILDDIR/conf
if [ ! -e $BUILDDIR/conf/local.conf ]; then
    cp $TEMPLATECONF/local.conf.sample $BUILDDIR/conf/local.conf
    echo "You had no local.conf file. This configuration file has therefore been"
    echo "created for you with some default values."

    NCPU=`grep -c processor /proc/cpuinfo`
    JOBS=`expr $NCPU \* $JOBS_FACTOR`
    THREADS=`expr $NCPU \* $THREADS_FACTOR`
    sed -i -e"s/^#*PARALLEL_MAKE *?*=.*/PARALLEL_MAKE ?= \"-j$JOBS\"/" $BUILDDIR/conf/local.conf
    sed -i -e"s/^#*BB_NUMBER_THREADS *?*=.*/BB_NUMBER_THREADS ?= \"$THREADS\"/" $BUILDDIR/conf/local.conf
else
    if [ -n "$MACHINE" ]; then
        echo "Reconfiguring existing local.conf for $MACHINE"
    fi
fi
if [ -n "$MACHINE" ]; then
    sed -i -e"s/^#*MACHINE *?*=.*/MACHINE ??= \"$MACHINE\"/" $BUILDDIR/conf/local.conf
fi

if [ ! -e $BUILDDIR/conf/bblayers.conf ]; then
    echo "MELDIR = \"$MELDIR\"" >$BUILDDIR/conf/bblayers.conf
    echo >>$BUILDDIR/conf/bblayers.conf
    cat $TEMPLATECONF/bblayers.conf.sample >>$BUILDDIR/conf/bblayers.conf
    echo "You had no bblayers.conf file. This configuration file has therefore been"
    echo "created for you with some default values."
else
    if [ -n "$MACHINE" ]; then
        echo "Reconfiguring existing bblayers.conf for $MACHINE"
    fi
fi

if [ -n "$MACHINE" ]; then
    # Remove existing BBLAYERS
    sed -i -n '/^BBLAYERS/{n; :start; /\\$/{n; b start}; /^ *"$/d; :done}; p' $BUILDDIR/conf/bblayers.conf
    echo 'BBLAYERS = "\' >> $BUILDDIR/conf/bblayers.conf
    prioritized_layers | while read layer; do
        echo "    $layer \\" >> $BUILDDIR/conf/bblayers.conf
    done
    echo '"' >> $BUILDDIR/conf/bblayers.conf
fi

if [ ! -e $BUILDDIR/conf/site.conf -a -e $TEMPLATECONF/site.conf ]; then
    echo "You had no site.conf file, but one exists in the template directory."
    echo "This file has been copied into your build directory."
    cp $TEMPLATECONF/site.conf $BUILDDIR/conf/site.conf
fi
